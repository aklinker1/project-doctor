name: Publish
on:
  workflow_dispatch: {}

jobs:
  verify:
    name: Verify Code
    runs-on: ubuntu-20.04
    steps:
      - name: Install Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17

      - name: Install Node 14
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Checkout Repo
        uses: actions/checkout@v2

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: make build

      - name: Run doctor
        run: USE_LOCAL_SCHEMA=true ./bin/doctor --debug

  release:
    name: Create Release
    runs-on: ubuntu-20.04
    needs: [verify]
    outputs:
      version: ${{ steps.changelog.outputs.version }}
      new_release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Install Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17

      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Create Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          output-file: "false"
          fallback-version: "0.1.0"
          version-file: meta.json
          git-user-name: aklinker1
          git-user-email: aaronklinker1@gmail.com

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

  publish:
    name: Publish Binaries
    needs: [release]
    runs-on: ubuntu-20.04
    strategy:
      # os - matches `go tool dist list`, an os that go supports and works with the install command
      # download_arch - matches `uname -m`, arch needed for install command
      # build_arch - matches `go tool dist list`, arch supported by go
      matrix:
        include:
          # List same as https://github.com/docker/compose/releases/tag/v2.3.3
          - os: darwin
            download_arch: aarch64
            build_arch: arm64
          - os: darwin
            download_arch: x86_64
            build_arch: amd64
          - os: linux
            download_arch: aarch64
            build_arch: arm64
          - os: linux
            download_arch: armv7
            build_arch: arm
          - os: linux
            download_arch: s390x
            build_arch: s390x
          - os: linux
            download_arch: x86_64
            build_arch: "386"
          - os: windows
            download_arch: x86_64
            build_arch: "386"
            extension: .exe
    steps:
      - name: Install Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17

      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Debug Virtual Machine
        run: |
          uname -s
          uname -m

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.build_arch }} go build -o bin/doctor main.go

      - name: Build Details
        id: build_details
        run: echo "::set-output name=variant::${{ matrix.os }}-${{ matrix.download_arch }}${{ matrix.extension }}"

      - name: Upload To New Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.new_release_upload_url }}
          asset_path: bin/doctor
          asset_name: doctor-${{ steps.build_details.outputs.variant }}
          asset_content_type: application/octet-stream

      # This step doesn't fail if the asset is not present
      - name: Remove Asset from Latest
        uses: flcdrg/remove-release-asset-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: 62721291
          asset_name: doctor-${{ steps.build_details.outputs.variant }}

      - name: Upload To Latest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/aklinker1/project-doctor/releases/62721291/assets{?name,label}
          asset_path: bin/doctor
          asset_name: doctor-${{ steps.build_details.outputs.variant }}
          asset_content_type: application/octet-stream
